## Programming Basics Assessment - New Problems

Here are 10 problems for each category in a markdown table format:

**Category 1: Basic Operators & If-Else-If Statements**

| # | Problem Statement | Input Format | Output Format | Constraints | Test Cases | Explanation |
|---|---|---|---|---|---|---| 
| 1 | Rahul wants to buy a new cricket bat for ₹P. He has ₹Q saved up. Determine if Rahul has enough money to buy the bat. If yes, print "Yes". Otherwise, print "No".  |  A single line containing two space-separated integers P and Q. |  Print "Yes" if Rahul has enough money. Otherwise, print "No". | 1 ≤ P, Q ≤ 1000 | **Input:** <br> 500 600 <br> **Output:** <br> Yes | Rahul has ₹600, which is enough to buy the bat costing ₹500. |
| 2 |  A train ticket from Mumbai to Delhi costs ₹X for adults and ₹Y for children. Calculate the total cost for a family of A adults and C children. | A single line containing four space-separated integers X, Y, A, and C respectively. | A single integer representing the total ticket cost. |  1 ≤ X, Y ≤ 1000 <br> 1 ≤ A, C ≤ 10 | **Input:** <br> 1000 500 2 1 <br> **Output:** <br> 2500 | The total cost is (2 adults * ₹1000/adult) + (1 child * ₹500/child) = ₹2500. |
| 3 |  A shopkeeper sells mangoes in packs of three. If a customer buys N mangoes, find out how many mangoes will be left after making packs of three. | A single integer N. | A single integer representing the number of mangoes left. | 1 ≤ N ≤ 1000 | **Input:** <br> 10 <br> **Output:** <br> 1 | 10 mangoes can make 3 packs (3*3 = 9), leaving 1 mango. |
| 4 |  A school is organizing a picnic. They need one bus for every 50 students. If there are S students going for the picnic, calculate the minimum number of buses required. |  A single integer S. | A single integer representing the minimum number of buses required. | 1 ≤ S ≤ 1000 | **Input:** <br> 120 <br> **Output:** <br> 3 |  They need 3 buses because 2 buses can accommodate only 100 students (2 * 50 = 100). |
| 5 |  A carpenter has a wooden plank of length L meters. He wants to cut it into pieces of equal length, with each piece being M meters long. Find the maximum number of pieces he can cut. |  Two space-separated integers L and M. |  A single integer representing the maximum number of pieces. |  1 ≤ L, M ≤ 1000 | **Input:** <br> 10 2 <br> **Output:** <br> 5 | He can cut the plank into 5 pieces of 2 meters each (10 / 2 = 5). |
| 6 |  A farmer has P apples and Q oranges. Determine if he has more apples than oranges. Print "Yes" if he does, otherwise print "No". | Two space-separated integers P and Q. |  Print "Yes" if the farmer has more apples, otherwise print "No". | 1 ≤ P, Q ≤ 1000 | **Input:** <br> 20 15 <br> **Output:** <br> Yes |  The farmer has 20 apples, which is more than the 15 oranges. |
| 7 |  A restaurant offers a discount of D% on the total bill amount B. Calculate the final bill amount after the discount. |  Two space-separated integers B and D. |  A single integer representing the final bill amount. |  1 ≤ B ≤ 1000 <br> 1 ≤ D ≤ 100 | **Input:** <br> 500 10 <br> **Output:** <br> 450 | The discount amount is (10/100) * 500 = 50. Final bill amount is 500 - 50 = 450. |
| 8 |  A student needs to score at least P marks in an exam to pass. If the student scores M marks, determine if the student passed or failed. Print "Pass" if the student passed, otherwise print "Fail". |  Two space-separated integers P and M. |  Print "Pass" if the student passed, otherwise print "Fail". |  1 ≤ P, M ≤ 100 |  **Input:** <br> 40 35 <br> **Output:** <br> Fail |  The student scored 35 marks, which is less than the passing marks of 40. |
| 9 |  A fruit seller bought A apples and sold S apples. Find the number of apples remaining with the fruit seller. |  Two space-separated integers A and S. |  A single integer representing the number of apples remaining. |  1 ≤ A, S ≤ 1000 |  **Input:** <br> 100 60 <br> **Output:** <br> 40 | The fruit seller has 40 apples remaining (100 - 60 = 40). |
| 10 |  A rectangular garden has a length of L meters and a width of W meters. Calculate the perimeter of the garden. |  Two space-separated integers L and W. |  A single integer representing the perimeter of the garden. |  1 ≤ L, W ≤ 100 | **Input:** <br> 10 5 <br> **Output:** <br> 30 | The perimeter is 2 * (length + width) = 2 * (10 + 5) = 30 meters. |

**Category 2: While Loops & Break Statements**

| # | Problem Statement | Input Format | Output Format | Constraints | Test Cases | Explanation |
|---|---|---|---|---|---|---| 
| 1 |  Help a milkman deliver milk to all houses on a street numbered 1 to N. He can deliver to a maximum of K houses at a time. Print the house numbers he delivers to in each round. | Two space-separated integers N and K. |  Print the house numbers delivered to in each round, separated by spaces. Each round should be on a new line. | 1 ≤ N ≤ 100 <br> 1 ≤ K ≤ N | **Input:** <br> 10 3 <br> **Output:** <br> 1 2 3 <br> 4 5 6 <br> 7 8 9 <br> 10 | The milkman delivers to houses 1, 2, and 3 in the first round, 4, 5, and 6 in the second round, and so on. |
| 2 |  Rahul is participating in a quiz. The quiz has N questions, and Rahul wants to answer at least P questions correctly to win a prize. Write a program to simulate the quiz, taking Rahul's answers as input (1 for correct, 0 for incorrect), and stop the quiz if he wins the prize or answers all questions. | The first line contains two space-separated integers: N and P. <br> The next N lines contain a single integer, either 0 or 1, representing Rahul's answer to each question. |  Print "Won" if Rahul wins the prize. Otherwise, print "Lost". | 1 ≤ N ≤ 100 <br> 1 ≤ P ≤ N | **Input:** <br> 5 3 <br> 1 <br> 0 <br> 1 <br> 1 <br> 0 <br> **Output:** <br> Won | Rahul answered 3 questions correctly (1, 3, and 4) before answering all the questions, hence he won the prize. |
| 3 |  A shopkeeper is selling Diwali lights. He has a box with N lights, but some of them are defective. He wants to find the first defective light. Help him by simulating checking each light (0 for working, 1 for defective), and stop when a defective light is found. | A single integer N. <br> The next N lines contain a single integer, either 0 or 1, representing the condition of each light. | Print the position (starting from 1) of the first defective light. |  1 ≤ N ≤ 100 | **Input:** <br> 5 <br> 0 <br> 0 <br> 1 <br> 0 <br> 1 <br> **Output:** <br> 3 | The third light is the first defective light. |
| 4 |  A water tank has a capacity of C liters. Water is being filled in the tank at a rate of F liters per minute, and simultaneously being drained at a rate of D liters per minute. Determine how many minutes it will take to fill the tank completely. | Three space-separated integers C, F, and D. |  A single integer representing the time taken in minutes. |  1 ≤ C, F, D ≤ 1000 <br> F > D | **Input:** <br> 100 10 5 <br> **Output:** <br> 20 | The net filling rate is 5 liters per minute (10 - 5 = 5). It takes 20 minutes to fill 100 liters (100 / 5 = 20). |
| 5 |  A teacher is distributing candies to her students. She wants to give each student at least M candies. She has a bag with N candies. Determine the maximum number of students she can give candies to. |  Two space-separated integers N and M. | A single integer representing the maximum number of students. | 1 ≤ N, M ≤ 1000 | **Input:** <br> 100 5 <br> **Output:** <br> 20 | She can give candies to a maximum of 20 students (100 / 5 = 20). |
| 6 |  A man is climbing a staircase. He can climb up to X steps at a time. If the staircase has N steps, find the minimum number of steps he needs to take to reach the top. | Two space-separated integers N and X. | A single integer representing the minimum number of steps. | 1 ≤ N, X ≤ 1000 |  **Input:** <br> 15 3 <br> **Output:** <br> 5 | He needs to take 5 steps (3 steps + 3 steps + 3 steps + 3 steps + 3 steps = 15 steps). |
| 7 |  A child is playing a game where they have to guess a number between 1 and N. Write a program to simulate the game, taking the child's guess as input, and providing feedback ("Too high", "Too low", or "Correct") until the child guesses correctly. | A single integer N representing the upper limit of the guessing range. <br> The following lines will each contain an integer representing the child's guess until the correct answer is guessed. | For each guess, print "Too high", "Too low", or "Correct" on a new line. | 1 ≤ N ≤ 100 |  **Input:** <br> 10 <br> 5 <br> 8 <br> 7 <br> **Output:** <br> Too low <br> Too high <br> Correct |  The child guessed 5 (too low), then 8 (too high), and finally 7 (correct). |
| 8 |  Riya is collecting stamps for her collection. She needs a total of N stamps. She currently has C stamps. Her father gives her S stamps every week. Find out how many weeks it will take her to complete her collection. | Three space-separated integers N, C, and S. |  A single integer representing the number of weeks. | 1 ≤ N, C, S ≤ 1000 |  **Input:** <br> 100 20 10 <br> **Output:** <br> 8 | Riya needs 80 more stamps (100 - 20 = 80) and will take 8 weeks to collect them (80 / 10 = 8). |
| 9 |  A shopkeeper is arranging apples in a pyramid. The top level has 1 apple, the second level has 2 apples, the third level has 3 apples, and so on. If he has N apples, find out how many levels he can completely fill. |  A single integer N representing the number of apples. |  A single integer representing the number of complete levels. |  1 ≤ N ≤ 1000 |  **Input:** <br> 10 <br> **Output:** <br> 4 | The shopkeeper can complete 4 levels (1 + 2 + 3 + 4 = 10). |
| 10 |  A car is travelling from city A to city B, which are D kilometers apart. The car travels at a speed of S kilometers per hour, but has to stop for a break of B minutes after every H kilometers. Calculate the total time taken for the journey in minutes. |  Four space-separated integers D, S, B, and H. |  A single integer representing the total time in minutes. | 1 ≤ D, S, H ≤ 1000 <br> 1 ≤ B ≤ 60 |  **Input:** <br> 200 60 10 100 <br> **Output:** <br> 220 |  The car travels for 2 hours (200 km / 60 km/h = 3.33 hours, but we only consider full hours before the break). It takes two breaks of 10 minutes each (200 km / 100 km/break = 2 breaks). The total time is 120 minutes (2 hours * 60 minutes/hour) + 20 minutes (2 breaks * 10 minutes/break) = 140 minutes. |


**Category 3: Arrays**

| # | Problem Statement | Input Format | Output Format | Constraints | Test Cases | Explanation |
|---|---|---|---|---|---|---| 
| 1 |  A shopkeeper has a list of N items with their prices stored in an array. Help him calculate the total cost of all the items. | The first line contains a single integer N, representing the number of items. <br> The second line contains N space-separated integers, representing the price of each item. |  A single integer representing the total cost. | 1 ≤ N ≤ 100 <br> 1 ≤ Price of each item ≤ 1000 | **Input:** <br> 5 <br> 10 20 30 40 50 <br> **Output:** <br> 150 | The total cost is 10 + 20 + 30 + 40 + 50 = 150. |
| 2 |  A teacher has a list of N students with their marks in an exam stored in an array. Find the highest marks obtained by any student. |  The first line contains a single integer N, representing the number of students. <br> The second line contains N space-separated integers, representing the marks of each student. |  A single integer representing the highest marks. | 1 ≤ N ≤ 100 <br> 0 ≤ Marks of each student ≤ 100 | **Input:** <br> 6 <br> 70 80 55 90 65 85 <br> **Output:** <br> 90 | The highest marks obtained are 90. |
| 3 |  A fruit seller has two baskets of fruits. The first basket contains N apples, and the second basket contains M oranges. The weight of each apple and orange is stored in two separate arrays. Find the total weight of fruits the fruit seller has. | The first line contains two space-separated integers N and M, representing the number of apples and oranges, respectively. <br> The second line contains N space-separated integers, representing the weight of each apple. <br> The third line contains M space-separated integers, representing the weight of each orange. | A single integer representing the total weight of fruits. |  1 ≤ N, M ≤ 100 <br> 1 ≤ Weight of each apple, orange ≤ 1000 | **Input:** <br> 3 2 <br> 100 120 150 <br> 200 250 <br> **Output:** <br> 720 | The total weight of apples is 370 (100 + 120 + 150 = 370), and the total weight of oranges is 450 (200 + 250 = 450). Hence the total weight of fruits is 820. |
| 4 |  A gardener has planted N types of flowers in his garden. He has noted down the number of each type of flower in an array. Find the flower type that he has planted the most. |  The first line contains a single integer N, representing the number of flower types. <br> The second line contains N space-separated integers, representing the number of each flower type. |  A single integer representing the flower type with the maximum count. If there are multiple flower types with the same maximum count, print the flower type with the smallest index. | 1 ≤ N ≤ 100 <br> 0 ≤ Number of flowers of each type ≤ 1000 |  **Input:** <br> 5 <br> 2 4 1 3 4 <br> **Output:** <br> 2 |  The flower types 2 and 5 both have the maximum count of 4. However, the flower type 2 has a smaller index, so the output is 2. |
| 5 |  A train has N compartments. The number of passengers in each compartment is stored in an array. Given that the fare per passenger is F, calculate the total revenue generated from the train. | The first line contains two space-separated integers N and F, representing the number of compartments and the fare per passenger respectively. <br> The second line contains N space-separated integers, representing the number of passengers in each compartment. |  A single integer representing the total revenue. | 1 ≤ N ≤ 100 <br> 1 ≤ F ≤ 1000 <br> 0 ≤ Number of passengers in each compartment ≤ 100 |  **Input:** <br> 5 50 <br> 20 15 30 25 10 <br> **Output:** <br> 5000 |  The total number of passengers is 100 (20 + 15 + 30 + 25 + 10 = 100). The total revenue is 5000 (100 * 50 = 5000). |
| 6 |  A shopkeeper sells different types of candies. He has N jars, and the number of candies in each jar is stored in an array. He wants to transfer candies from one jar to another such that all jars have an equal number of candies. Find the minimum number of candies he needs to transfer. |  The first line contains a single integer N, representing the number of jars. <br> The second line contains N space-separated integers, representing the number of candies in each jar. |  A single integer representing the minimum number of candies to transfer. | 1 ≤ N ≤ 100 <br> 0 ≤ Number of candies in each jar ≤ 1000 |  **Input:** <br> 4 <br> 1 4 2 3 <br> **Output:** <br> 2 |  The average number of candies per jar is 2.5 ((1+4+2+3)/4 = 2.5). To make each jar have an equal number of candies, the shopkeeper needs to transfer a minimum of 2 candies. |
| 7 |  A group of friends are playing a game where they have to stand in a line based on their heights. Their heights are stored in an array. Arrange the friends in ascending order of their heights. | The first line contains a single integer N, representing the number of friends. <br> The second line contains N space-separated integers, representing the height of each friend. | Print the heights of the friends in ascending order, separated by spaces. | 1 ≤ N ≤ 100 <br> 1 ≤ Height of each friend ≤ 200 | **Input:** <br> 5 <br> 160 170 155 180 165 <br> **Output:** <br> 155 160 165 170 180 |  The friends are arranged in ascending order of their heights. |
| 8 |  A teacher is distributing chocolates to her students. She has N chocolates, and she wants to distribute them equally among her M students. The number of chocolates each student gets is stored in an array. Find the number of chocolates remaining with the teacher after distributing them. |  The first line contains two space-separated integers N and M, representing the number of chocolates and students respectively. |  A single integer representing the number of chocolates remaining. | 1 ≤ N, M ≤ 100 | **Input:** <br> 100 20 <br> **Output:** <br> 0 | Each student receives 5 chocolates (100 / 20 = 5), leaving no chocolates remaining. |
| 9 |  A librarian has a list of N books and their corresponding ISBN numbers stored in two separate arrays. Given an ISBN number, help the librarian find the index of the book in the first array. | The first line contains a single integer N, representing the number of books. <br> The second line contains N space-separated integers, representing the ISBN number of each book. <br> The third line contains a single integer, representing the ISBN number to search for. |  Print the index of the book with the given ISBN number. If the ISBN number is not found, print -1. | 1 ≤ N ≤ 100 <br> 1 ≤ ISBN number of each book ≤ 10^9 | **Input:** <br> 5 <br> 123 456 789 101 112 <br> 789 <br> **Output:** <br> 2 | The book with ISBN number 789 is at index 2 (considering 0-based indexing). |
| 10 |  A carpenter has N wooden planks of different lengths stored in an array. He wants to join them end to end to create the longest possible plank. Find the length of the longest plank he can create. |  The first line contains a single integer N, representing the number of planks. <br> The second line contains N space-separated integers, representing the length of each plank. |  A single integer representing the length of the longest plank. | 1 ≤ N ≤ 100 <br> 1 ≤ Length of each plank ≤ 1000 | **Input:** <br> 4 <br> 10 20 30 40 <br> **Output:** <br> 100 | The carpenter can create a plank of length 100 (10 + 20 + 30 + 40 = 100). |
